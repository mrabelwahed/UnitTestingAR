# This is a basic workflow to help you get started with Actions

name: Master CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  unit_tests:
    runs-on: [ubuntu-latest]
    steps:
     - name: Checkout
       uses: actions/checkout@v4.1.7
     - name: setup Java JDK
       uses: actions/setup-java@v4.3.0
       with:
         java-version: 17
         distribution: 'zulu'
         cache: gradle

     - name: Grant Permissions For gradlew
       run: chmod +x gradlew
     - name: Run Unit Test
       run: ./gradlew test

  build_apk:
      name: Generate APK
      runs-on: [ubuntu-latest]
      steps:
        - uses: actions/checkout@v4.1.7
        - name: setup Java JDK
          uses: actions/setup-java@v4.3.0
          with:
            java-version: 17
            distribution: 'zulu'
            cache: gradle
        - name: Assemble app debug APK
          run: ./gradlew assembleDebug --stacktrace
        - name: Upload APK
          uses: actions/upload-artifact@v4
          with:
            name: app-debug
            path: app/build/outputs/apk/debug/app-debug.apk
        - name: Assemble Android Instrumentation Tests
          run: ./gradlew assembleDebugAndroidTest
        - name: Upload Android Test APK
          uses: actions/upload-artifact@v4
          with:
              name: app-debug-androidTest
              path: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk




  firebase:
   name: Run UI tests with Firebase Test Lab
   needs: apk
   runs-on: [ubuntu-latest]
   steps:
     - uses: actions/checkout@v4.1.7
     - name: Download app APK
       uses: actions/download-artifact@v4
       with:
         name: app-debug
     - name: Download Android test APK
       uses: actions/download-artifact@v4
       with:
         name: app-debug-androidTest
     - name: Login to Google Cloud
       uses: 'google-github-actions/setup-gcloud@v2'
       with:
         version: '>=363.0.0'
         service_account_key: ${{secrets.GCLOUD_AUTH}}
     - name: Set Current Project
       run: gcloud config set project ${{ secrets.FIREBASE_PROJECT_ID }}
     - name: Run Instrumentation Tests in Firebase Test Lab
       run: gcloud firebase test android run --type instrumentation --app app-debug/app-debug.apk --test app-debug-androidTest/app-debug-androidTest.apk --device model=Pixel2,version=28,locale=pl,orientation=portrait
       #  android_tests:
       #    runs-on: [macos-11]
       #    steps:
       #      - uses: actions/checkout@v4.1.7
       #      - name: setup Java JDK
       #        uses: actions/setup-java@v4.3.0
       #        with:
       #         java-version: 17
       #         distribution: 'zulu'
       #         cache: gradle
       #      - name: Run Instrumentation Tests
       #        uses: ReactiveCircus/android-emulator-runner@v2
       #        with:
       #          api-level: 30
       #          target: google_apis
       #          arch: x86_64
       #          script: ./gradlew connectedCheck

       # This workflow contains a single job called "build"
       #  build:
       #    # The type of runner that the job will run on
       #    runs-on: ubuntu-latest
       #
       #    # Steps represent a sequence of tasks that will be executed as part of the job
       #    steps:
       #      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
       #     - name: Checkout
       #       uses: actions/checkout@v4.1.7
       #
       #     - name: Setup Java JDK
       #       uses: actions/setup-java@v4.3.0
       #       with:
       #        java-version: 17
       #        distribution: 'zulu'
       #        cache: gradle
       #
       #     - name: Grant execute permission for  gradlew
       #       run:  chmod +x gradlew
       #     - name: Build with Gradle
       #       run: ./gradlew assembleDebug
       #     - name: Run Ktlint Check
       #       run: ./gradlew ktlintCheck
       #     - name: Run Detekt
       #       run: ./gradlew detekt
       #     - name: Run Unit Testing
       #       run: ./gradlew testDebugUnitTest
       # - name: Run Instrumented Tests
       #   uses: ReactiveCircus/android-emulator-runner@v2
       #   with:
       #    api-level: 33
       #    target: google_apis
       #    arch: x86_64
       #    disable_animation: true
       #    script: ./gradlew connectedCheck
#  apk:
#    name: Generate APK
#    runs-on: ubuntu-18.04
#
#    steps:
#      - uses: actions/checkout@v1
#      - name: set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#      - name: Build debug APK
#        run: bash ./gradlew assembleDebug --stacktrace
#      - name: Upload APK
#        uses: actions/upload-artifact@v1
#        with:
#          name: app
#          path: app/build/outputs/apk/debug/app-debug.apk
#
#
#
#
