# This is a basic workflow to help you get started with Actions

name: Master CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  unit_tests:
    runs-on: [ubuntu-latest]
    steps:
     - name: Checkout
       uses: actions/checkout@v4.1.7
     - name: setup Java JDK
       uses: actions/setup-java@v4.3.0
       with:
         java-version: 17
         distribution: 'zulu'
         cache: gradle

     - name: Grant Permissions For gradlew
       run: chmod +x gradlew
     - name: Run Unit Test
       run: ./gradlew test

  android_tests:
    runs-on: [macos-latest]
    steps:
      - uses: actions/checkout@v4.1.7
      - name: setup Java JDK
        uses: actions/setup-java@v4.3.0
        with:
         java-version: 17
         distribution: 'zulu'
         cache: gradle
      - name: Run Instrumentation Tests
        uses: ReactiveCircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          script: ./gradlew connectedCheck

  # This workflow contains a single job called "build"
#  build:
#    # The type of runner that the job will run on
#    runs-on: ubuntu-latest
#
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#     - name: Checkout
#       uses: actions/checkout@v4.1.7
#
#     - name: Setup Java JDK
#       uses: actions/setup-java@v4.3.0
#       with:
#        java-version: 17
#        distribution: 'zulu'
#        cache: gradle
#
#     - name: Grant execute permission for  gradlew
#       run:  chmod +x gradlew
#     - name: Build with Gradle
#       run: ./gradlew assembleDebug
#     - name: Run Ktlint Check
#       run: ./gradlew ktlintCheck
#     - name: Run Detekt
#       run: ./gradlew detekt
#     - name: Run Unit Testing
#       run: ./gradlew testDebugUnitTest
     # - name: Run Instrumented Tests
     #   uses: ReactiveCircus/android-emulator-runner@v2
     #   with:
     #    api-level: 33
     #    target: google_apis
     #    arch: x86_64
     #    disable_animation: true
     #    script: ./gradlew connectedCheck
#  apk:
#    name: Generate APK
#    runs-on: ubuntu-18.04
#
#    steps:
#      - uses: actions/checkout@v1
#      - name: set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#      - name: Build debug APK
#        run: bash ./gradlew assembleDebug --stacktrace
#      - name: Upload APK
#        uses: actions/upload-artifact@v1
#        with:
#          name: app
#          path: app/build/outputs/apk/debug/app-debug.apk
#
#
#
#
